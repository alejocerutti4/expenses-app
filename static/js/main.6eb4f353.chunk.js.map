{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/ControlPresupuesto.jsx","helpers.js","components/Listado.jsx","components/Formulario.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","setPresupuestoDefinido","useState","cantidad","guardarCantidad","error","actualizarError","onSubmit","e","preventDefault","isNaN","type","name","id","aria-describedby","placeholder","onChange","parseInt","target","value","ControlPresupuesto","presupuesto","restante","color","setColor","labelRestante","claseRestante","useEffect","revisarPresupuesto","Listado","gastos","eliminarGastoEspecifico","map","gasto","nombreGasto","cantidadGasto","onClick","style","fontSize","shortid","generate","Formulario","agregarNuevoGasto","eliminarGasto","guardarNombre","trim","htmlFor","App","presupuestoDefinido","guardarGastos","resultado","reduce","acc","el","nuevosGastos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb4f353.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n        <div className=\"divError\">\r\n            <span>{mensaje}</span>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error\r\n","import React, {useState} from 'react'\r\nimport Error from './Error'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, setPresupuestoDefinido}) => {\r\n\r\n    // Definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, actualizarError] = useState(false)\r\n    \r\n    const definirPresupuesto = (e)=>{\r\n        guardarCantidad(parseInt(e.target.value, 10))\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        // Validar\r\n        if(cantidad<1 || isNaN(cantidad)){\r\n            actualizarError(true)\r\n            return\r\n        }\r\n\r\n        // Después de validar\r\n        actualizarError(false)\r\n        guardarPresupuesto(cantidad)\r\n        guardarRestante(cantidad)\r\n        setPresupuestoDefinido(true)\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"boxContainer\">\r\n            <h2 className=\"mb-5\">Coloca tu presupuesto</h2>\r\n            \r\n            {\r\n                error ? <Error mensaje=\"El presupuesto no es válido\" /> : null\r\n            }\r\n            \r\n\r\n            <form className=\"form-group formBox mb-4\" onSubmit={agregarPresupuesto}>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"form-control mt-2\"\r\n                    name=\"presupuesto\"\r\n                    id=\"presupuesto\"\r\n                    aria-describedby=\"helpId\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    <b>DEFINIR PRESUPUESTO</b>\r\n                </button>\r\n            </form>\r\n      </div>\r\n    )\r\n    \r\n}\r\n\r\nPregunta.propTypes={\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    setPresupuestoDefinido: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Pregunta\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport {revisarPresupuesto} from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n\r\n    \r\n    const [color, setColor] = useState('verde');\r\n    const labelRestante = restante > 0 ? \"Restante: \" : \"Te faltan: \";\r\n\r\n    let claseRestante = \"divRestante \" +color+  \" mb-5\";\r\n    useEffect(()=>{\r\n        setColor(revisarPresupuesto(presupuesto, restante))\r\n    }, [restante])\r\n    \r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"divPresupuesto my-2\">\r\n                <span>Presupuesto: {presupuesto}$</span>\r\n            </div>\r\n            <div className={claseRestante}>\r\n                <span>{labelRestante}{restante}$</span>\r\n            </div>       \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nControlPresupuesto.propTypes={\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default ControlPresupuesto\r\n","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let color = '';\r\n    if(restante >= ((60*presupuesto)/100)){\r\n        color = ('verde');\r\n    }else if((restante > (30*presupuesto)/100) && (restante <(60*presupuesto)/100)){\r\n        color = 'amarillo'\r\n    }else if(restante < (30*presupuesto)/100){\r\n        color = 'rojo';\r\n    }\r\n\r\n    return color;\r\n}","import React from 'react'\r\nimport ControlPresupuesto from './ControlPresupuesto'\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid'\r\nimport { MdDelete } from \"react-icons/md\";\r\nconst Listado = ({gastos, presupuesto, restante, eliminarGastoEspecifico}) => {\r\n    const eliminarGasto = (id) => {\r\n        eliminarGastoEspecifico(id)\r\n    }\r\n    return (\r\n        <div className=\"listadoDiv mx-3\">\r\n            <h2>Listado</h2>\r\n            <ul className=\"list-group ul-list\">\r\n                {\r\n                    gastos.map(gasto=>(\r\n                        <li \r\n                        key={gasto.id} \r\n                        className=\"list-group-item li-item\"\r\n                        >\r\n                            <div id=\"listado-component\">\r\n                                <div>\r\n                                    <span>{gasto.nombreGasto}</span>\r\n                                </div>\r\n                                <div >\r\n                                    <span className=\"higlight\">${gasto.cantidadGasto}</span>\r\n                                    <a id=\"delete-button\" onClick={()=>eliminarGasto(gasto.id)}>\r\n                                        <MdDelete style={{color: 'red', fontSize: '25px'}}/>\r\n                                    </a>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n                        </li> \r\n                    ))\r\n                }\r\n            </ul>\r\n            <ControlPresupuesto \r\n            presupuesto={presupuesto}\r\n            restante={restante}\r\n            key={shortid.generate()}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nListado.propTypes={\r\n    gastos: PropTypes.array.isRequired,\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Listado\r\n","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport Listado from './Listado'\r\nimport shortid from 'shortid'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Formulario = ({agregarNuevoGasto, gastos, presupuesto, restante, eliminarGasto}) => {\r\n\r\n    const [nombreGasto, guardarNombre] = useState('')\r\n    const [cantidadGasto, guardarCantidad] = useState()\r\n    const [error, actualizarError] = useState(0)\r\n\r\n    const agregarCantidad = (e) => {\r\n        guardarCantidad(e.target.value, 10)\r\n        \r\n    }\r\n\r\n    const eliminarGastoEspecifico = (id) => {\r\n        eliminarGasto(id)\r\n    }\r\n\r\n    const agregarGasto = e =>{\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if(nombreGasto.trim() === ''){\r\n            actualizarError(1)\r\n            return\r\n        }else if(cantidadGasto < 1 || isNaN(cantidadGasto) ){\r\n            actualizarError(2)\r\n            return\r\n        }\r\n\r\n        actualizarError(0)\r\n\r\n        // Construir el gasto\r\n        const gasto = {\r\n            nombreGasto,\r\n            cantidadGasto,\r\n            id: shortid.generate()\r\n        }\r\n\r\n\r\n        // Pasar el gasto al componente principal\r\n        agregarNuevoGasto(gasto)\r\n\r\n        // Resetear el form\r\n\r\n        guardarNombre(\"\")\r\n        guardarCantidad(0)\r\n    }\r\n    return (\r\n        <div className=\"formContainer\">\r\n            <div className=\"agregarGastoDiv mx-3\">\r\n                <h2>Agrega tus gastos aqui</h2>\r\n                {\r\n                    error === 1 \r\n                    ? \r\n                    <Error mensaje=\"Todos los campos son obligatorios\" />\r\n                    : error === 2 \r\n                    ?\r\n                    <Error mensaje=\"La cantiad ingresada es invalida\" />:\r\n                    null\r\n\r\n                }\r\n                 <form className=\"form-group mt-3\" onSubmit={agregarGasto}>\r\n                  <label htmlFor=\"nombreGasto\">Nombre Gasto</label>\r\n                  <input \r\n                  type=\"text\" \r\n                  className=\"form-control mb-4\" \r\n                  name=\"nombreGasto\" \r\n                  id=\"nombreGasto\" \r\n                  aria-describedby=\"helpId\" \r\n                  placeholder=\"Ej. Transporte\"\r\n                  value={nombreGasto}\r\n                  onChange={e=> guardarNombre(e.target.value)}\r\n                  />\r\n                  <label htmlFor=\"cantidadGasto\">Cantidad Gasto</label>\r\n                  <input \r\n                  type=\"number\" \r\n                  className=\"form-control mb-3\" \r\n                  name=\"cantidadGasto\" \r\n                  id=\"cantidadGasto\" \r\n                  aria-describedby=\"helpId\" \r\n                  placeholder='Ej. 300'\r\n                  value={cantidadGasto}\r\n                  onChange={agregarCantidad}\r\n                  />\r\n                  <button type=\"submit\" className=\"btn btn-primary w-100 mb-5\"><b>AGREGAR GASTO</b></button>\r\n                </form>\r\n            </div>\r\n            <Listado\r\n            gastos={gastos} \r\n            presupuesto={presupuesto}\r\n            restante={restante}\r\n            eliminarGastoEspecifico={eliminarGastoEspecifico}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nFormulario.propTypes={\r\n    agregarNuevoGasto: PropTypes.func.isRequired,\r\n    gastos: PropTypes.array.isRequired,\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Formulario\r\n","import React, { useState, useEffect } from \"react\";\nimport Pregunta from './components/Pregunta'\nimport Formulario from './components/Formulario'\nimport { get } from \"shortid/lib/alphabet\";\n\nfunction App() {\n\n  // Definir el presupuesto\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [presupuestoDefinido, setPresupuestoDefinido] = useState(false)\n  const [gastos, guardarGastos] = useState([])\n\n\n  const agregarNuevoGasto = gasto =>{\n    guardarGastos([\n      ...gastos, gasto\n    ])\n  \n\n\n  }\n\n  const eliminarGasto = id =>{\n    const nuevosGastos = gastos.filter(gasto => gasto.id !== id)\n    guardarGastos(nuevosGastos)\n  }\n\n  \n  \n\n  useEffect(()=>{\n    const resultado = gastos.reduce((acc,el) => parseInt(acc) + parseInt(el.cantidadGasto), 0);\n    guardarRestante(presupuesto-resultado)\n  }, [gastos])\n    \n    \n  \n\n\n\n  return (\n    <div className=\"divContainer\">\n      <h1 className=\"display-4 mt-5 mb-3\">Gasto Semanal</h1>\n      {\n        presupuestoDefinido \n        ? \n        (\n          <Formulario \n          agregarNuevoGasto={agregarNuevoGasto}\n          gastos={gastos}\n          presupuesto={presupuesto}\n          restante={restante}\n          eliminarGasto = {eliminarGasto}\n          />\n          \n        )\n        :\n        (\n          <Pregunta \n          guardarPresupuesto={guardarPresupuesto}\n          guardarRestante={guardarRestante}\n          setPresupuestoDefinido={setPresupuestoDefinido}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}